// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// A conference entity
model Conference {
  id         String       @id @default(uuid())
  name       String       @unique
  committees Committee[]
  start      DateTime?
  end        DateTime?
  Team       Team[]
  Delegation Delegation[]
}

/// Consumeable token which grants the creation of a conference
model ConferenceCreateToken {
  token String @id
}

enum CommitteeCategory {
  COMMITTEE /// A standard committee
  CRISIS /// A crisis simulation
  ICJ /// A International Court of Justice simulation
}

enum SpeakersListCategory {
  SPEAKERS_LIST /// A standard speakers list
  COMMENT_LIST /// A comment list
  MODERATED_CAUCUS /// A moderated caucus
}

enum Role {
  ADMIN
  CHAIR
  COMMITTEE_ADVISOR
  DELEGATE
  OBSERVER
  NON_STATE_ACTOR
  SECRETARIAT
  PRESS_CORPS
  PARTICIPANT_CARE
  TEAM
  GUEST
}

model Committee {
  id                 String                   @id @default(uuid())
  name               String
  abbreviation       String
  category           CommitteeCategory
  conference         Conference               @relation(fields: [conferenceId], references: [id])
  conferenceId       String
  isSubcommittee     Boolean
  parent             Committee?               @relation("subCommittee", fields: [parentId], references: [id])
  parentId           String?
  subCommittees      Committee[]              @relation("subCommittee")
  chairs             Team[]                   @relation("chairs")
  committee_advisors Team[]                   @relation("committee_advisors")
  AgendaItem         AgendaItem[]
  Delegates        Delegate[]

  @@unique([name, conferenceId])
}

model AgendaItem {
  id            String         @id @default(uuid())
  committee     Committee      @relation(fields: [committeeId], references: [id])
  committeeId   String
  title         String
  description   String?
  SpeakersLists SpeakersList[]
  isActive      Boolean        @default(false)
}

model SpeakersList {
  id           String               @id @default(uuid())
  AgendaItem   AgendaItem           @relation(fields: [agendaItemId], references: [id])
  agendaItemId String
  type         SpeakersListCategory
}

model Team {
  id                  String     @id @default(uuid())
  conference          Conference @relation(fields: [conferenceId], references: [id])
  conferenceId        String
  firstName           String
  lastName            String
  email               String
  role                Role
  chair_committee     Committee? @relation(fields: [chair_committeeId], references: [id], name: "chairs")
  chair_committeeId   String?
  advisor_committee   Committee? @relation(fields: [advisor_committeeId], references: [id], name: "committee_advisors")
  advisor_committeeId String?

  @@unique([conferenceId, email])
}

model Delegation {
  id           String                   @id @default(uuid())
  alpha3Code   String
  conference   Conference               @relation(fields: [conferenceId], references: [id])
  conferenceId String
  Delegates   Delegate[]
}

model Delegate {
  id           String     @id @default(uuid())
  delegation   Delegation @relation(fields: [delegationId], references: [id])
  delegationId String
  committee    Committee  @relation(fields: [committeeId], references: [id])
  committeeId  String
}