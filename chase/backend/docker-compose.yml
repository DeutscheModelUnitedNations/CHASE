services:
  postgres:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres -U postgres"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - ./docker/postgres:/var/lib/postgresql/data

  smtp4dev:
    image: rnwood/smtp4dev
    ports:
      - '3777:80'
      - '5968:25'
    environment:
      - RelayOptions__Login=dev
      - RelayOptions__Password=dev

  mockoidc:
    image: ghcr.io/navikt/mock-oauth2-server:2.1.5
    ports:
      - 8080:8080
    environment:
      JSON_CONFIG: >
        {
          "interactiveLogin": true,
          "httpServer": "NettyWrapper",
          "tokenCallbacks": [
            {
              "issuerId": "issuer1",
              "tokenExpiry": 120,
              "requestMappings": [
                {
                  "requestParam": "scope",
                  "match": "scope1",
                  "claims": {
                    "sub": "subByScope",
                    "aud": [
                      "audByScope"
                    ]
                  }
                }
              ]
            }
          ]
        }

  # zitadel:
  #   image: ghcr.io/zitadel/zitadel:latest
  #   command: 'start-from-init --masterkey "MasterkeyNeedsToHave32Characters" --tlsMode disabled'
  #   environment:
  #     ZITADEL_DATABASE_POSTGRES_HOST: zitadel-postgres
  #     ZITADEL_DATABASE_POSTGRES_PORT: 5432
  #     ZITADEL_DATABASE_POSTGRES_DATABASE: zitadel
  #     ZITADEL_DATABASE_POSTGRES_USER_USERNAME: postgres
  #     ZITADEL_DATABASE_POSTGRES_USER_PASSWORD: postgres
  #     ZITADEL_DATABASE_POSTGRES_USER_SSL_MODE: disable
  #     ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME: postgres
  #     ZITADEL_DATABASE_POSTGRES_ADMIN_PASSWORD: postgres
  #     ZITADEL_DATABASE_POSTGRES_ADMIN_SSL_MODE: disable
  #     ZITADEL_EXTERNALSECURE: false
  #   depends_on:
  #     zitadel-postgres:
  #       condition: 'service_healthy'
  #   ports:
  #     - '8080:8080'

  # zitadel-postgres:
  #   image: postgres
  #   environment:
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: postgres
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -d postgres -U postgres"]
  #     start_period: 20s
  #     interval: 30s
  #     retries: 5
  #     timeout: 5s
  #   volumes:
  #     - ./docker/zitadel-postgres:/var/lib/postgresql/data