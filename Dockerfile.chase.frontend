FROM oven/bun:latest AS install
ARG FONTAWESOME_NPM_AUTH_TOKEN
RUN export FONTAWESOME_NPM_AUTH_TOKEN=${FONTAWESOME_NPM_AUTH_TOKEN}
COPY package.json bun.lockb bunfig.toml /temp/dev/
COPY chase/backend/package.json /temp/dev/chase/backend/package.json
COPY chase/frontend/package.json /temp/dev/chase/frontend/package.json
RUN cd /temp/dev && bun install --frozen-lockfile

# we need to use node and bun for generating prisma files, see https://github.com/prisma/prisma/issues/21241
FROM imbios/bun-node AS builder
WORKDIR /app/staging
COPY --from=install /temp/dev/node_modules node_modules
COPY chase/frontend chase/frontend/
COPY chase/backend chase/backend/
# generates types and runs a typecheck for the backend since the frontend is using those types
RUN cd chase/backend && bun run typecheck
RUN bun next telemetry disable
RUN cd chase/frontend && bun run build

# unfortunately we need a nextjs installation at runtime
FROM oven/bun:latest AS nextjs
WORKDIR /app/staging
RUN bun add next

FROM oven/bun:latest AS release
WORKDIR /app/prod
COPY --from=nextjs /app/staging/node_modules ./node_modules/
COPY --from=builder /app/staging/chase/frontend/public ./public/
COPY --from=builder /app/staging/chase/frontend/.next/standalone ./
COPY --from=builder /app/staging/chase/frontend/.next/static ./.next/static
ENV NODE_ENV=production
ENV PORT=3000
# run the app
USER bun
EXPOSE 3000/tcp
ENTRYPOINT [ "bunx", "next", "start" ]